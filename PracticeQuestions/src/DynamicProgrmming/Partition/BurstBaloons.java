package DynamicProgrmming.Partition;

import java.util.Arrays;

public class BurstBaloons {
    public static void main(String[] args) {
        int[] nums = {
                85, 14, 163, 36, 112, 6, 54, 147, 176, 155, 197, 57, 187, 159, 90, 49, 162, 124, 70, 128, 65, 29, 138, 96, 48, 115, 192, 178, 177, 171, 102, 170, 120, 172, 166, 156, 141, 151, 5, 167, 119, 76, 64, 89, 84, 200, 42, 188, 50, 16, 110, 109, 117, 116, 2, 1, 130, 40, 99, 27, 45, 182, 175, 185, 123, 195, 39, 83, 78, 125, 144, 21, 67, 37, 104, 98, 137, 25, 31, 61, 139, 111, 132, 77, 24, 18, 33, 4, 7, 94, 87, 52, 105, 53, 189, 152, 100, 135, 3, 108, 149, 92, 179, 26, 15, 55, 101, 41, 107, 74, 9, 80, 68, 91, 72, 180, 158, 140, 114, 58, 150, 63, 165, 81, 198, 12, 75, 86, 19, 28, 146, 97, 121, 185, 51, 122, 93, 118, 157, 113, 60, 59, 131, 134, 47, 34, 164, 179, 73, 160, 8, 103, 82, 56, 169, 88, 190, 106, 32, 143, 71, 38, 148, 181, 193, 13, 199, 133, 168, 44, 183, 48, 30, 10, 22, 153, 66, 91, 42, 190, 139, 118, 109, 21, 9, 79, 173, 11, 17, 158, 43, 62, 12, 143, 148, 35, 20, 184, 154, 69, 126, 174, 101, 13, 35, 50, 165, 16, 26, 95, 107, 66, 33, 97, 1, 87, 45, 129, 85, 111, 22, 117, 88, 32, 86, 25, 47, 23, 99, 150, 192, 30, 72, 133, 37, 162, 124, 54, 131, 68, 121, 122, 90, 83, 19, 76, 73, 102, 119, 49, 57, 70, 152, 136, 153, 92, 18, 93, 78, 105, 179, 187, 95, 128, 174, 164, 147, 3, 14, 110, 108, 125, 67, 5, 135, 60, 177, 34, 115, 141, 132, 114, 120, 167, 8, 31, 193, 59, 20, 157, 84, 98, 138, 200, 113, 27, 170, 17, 166, 94, 38, 134, 130, 51, 55, 4, 175, 63, 7, 18, 117, 123, 71, 52, 10, 116, 145, 155, 194, 162, 40, 2, 61, 191, 77, 48, 35, 161, 195, 147, 169, 6, 29, 183, 79, 124, 43, 53, 12, 168, 50, 166, 41, 64, 36, 199, 32, 13, 180, 92, 60, 69, 97, 57, 188, 156, 194, 33, 109, 139, 82, 95, 142, 181, 111, 176, 96, 198, 42, 121, 85, 78, 137, 148, 65, 26, 151, 152, 80, 1, 145, 22, 131, 186, 159, 71, 126, 172, 160, 84, 165, 140, 88, 122, 163, 49, 75, 190, 173, 113, 25, 146, 177, 91, 123, 155, 58, 144, 154, 128, 81, 100, 105, 116, 37, 43, 39, 56, 93, 189, 106, 107, 187, 104, 159, 24, 129, 58, 14, 77, 41, 9, 103, 133, 138, 73, 162, 194, 30, 61, 117, 169, 16, 144, 140, 187, 48, 85, 160, 157, 139, 15, 164, 125, 38, 66, 120, 192, 63, 199, 147, 1, 89, 29, 178, 96, 191, 44, 110, 57, 86, 78, 32, 31, 135, 6, 39, 19, 91, 148, 74, 99, 82, 37, 107, 70, 100, 114, 116, 183, 198, 95, 13, 76, 47, 126, 153, 190, 87, 104, 176, 143, 167, 84, 139, 171, 123, 45, 18, 27, 151, 64, 5, 142, 144, 122, 185, 132, 59, 71, 106, 58, 67, 53, 170, 2, 12, 49, 93, 43, 24, 121, 4, 124, 165, 73, 36, 72, 161, 107, 88, 90, 56, 92, 68, 164, 67, 115, 197, 8, 141, 149, 180, 111, 183, 94, 20, 112, 195, 153, 102, 53, 19, 35, 14, 171, 38, 79, 81, 25, 65, 114, 175, 134, 83, 200, 178, 47, 22, 178, 102, 23, 146, 159, 169, 185, 127, 72, 175, 160, 21, 44, 126, 124, 176, 84, 146, 45, 116, 179, 122, 31, 170, 157, 91, 113, 109, 192, 88, 182, 6, 3, 55, 69, 33, 26, 90, 193, 155, 49, 145, 173, 30, 129, 52, 174, 58, 43, 137, 94, 82, 56, 27, 108, 13, 7, 97, 25, 144, 21, 80, 166, 20, 50, 187, 179, 79, 15, 77, 2, 99, 170, 71, 18, 192, 115, 163, 48, 98, 111, 93, 68, 23, 185, 139, 150, 100, 130, 169, 153, 70, 57, 168, 164, 38, 36, 86, 72, 108, 92, 47, 134, 19, 67, 161, 183, 148, 7, 37, 41, 51, 35, 157, 132, 177, 8, 34, 104, 17, 156, 55, 103, 27, 128, 139, 138, 32, 188, 16, 31, 90, 107, 180, 191, 28, 48, 39, 81, 113, 65, 146, 125, 88, 166, 145, 35, 116, 105, 53, 6, 94, 182, 71, 73, 129, 8, 66, 121, 67, 51, 62, 68, 164, 60, 74, 123, 188, 18, 191, 124, 37, 192, 135, 104, 56, 3, 111, 189, 14, 168, 36, 93, 136, 1, 97, 20, 59, 143, 133, 92, 139, 88, 91, 53, 62, 152, 5, 27, 158, 190, 83, 102, 98, 147, 25, 130, 179, 86, 38, 95, 43, 49, 45, 125, 9, 48, 63, 143, 89, 10, 187, 46, 150, 174, 165, 54, 70, 144, 194, 57, 154, 74, 118, 105, 66, 181, 100, 147, 83, 50, 189, 191, 156, 184, 92, 110, 105, 130, 95, 104, 108, 141, 41, 84, 40, 126, 69, 11, 160, 31, 72, 86, 40, 121, 19, 167, 155, 98, 112, 59, 76, 173, 171, 190, 3, 17, 137, 172, 165, 41, 81, 99, 96, 187, 145, 60, 63, 68, 62, 108, 80, 94, 1, 22, 120, 85, 29, 136, 10, 132, 149, 179, 122, 50, 30, 43, 93, 48, 11, 78, 128, 181, 2, 74, 159, 61, 105, 98, 118, 72, 7, 89, 138, 142, 56, 44, 79, 57, 77, 114, 97, 54, 13, 119, 178, 111, 144, 3, 75, 129, 69, 82, 20, 188, 149, 51, 41, 168, 61, 176, 75, 42, 142, 59, 96, 33, 87, 186, 82, 12, 84, 159, 113, 170, 109, 102, 157, 8, 79, 66, 30, 15, 89, 94, 98, 121, 137, 153, 65, 135, 132, 105, 142, 11, 106, 173, 134, 6, 34, 71, 169, 118, 140, 108, 187, 54, 38, 53, 37, 68, 83, 152, 190, 113, 44, 99, 19, 13, 36, 40, 178, 125, 103, 166, 43, 186, 184, 33, 181, 131, 9, 157, 14, 120, 167, 96, 76, 80, 95, 62, 75, 68, 7, 185, 114, 22, 49, 16, 130, 71, 5, 1, 118, 13, 23, 126, 143, 119, 139, 150, 58, 129, 141, 155, 74, 99, 131, 166, 21, 77, 177, 138, 162, 119, 4, 65, 14, 64, 189, 183, 52, 145, 88, 148, 85, 172, 28, 67, 123, 109, 37, 141, 70, 140, 159, 181, 96, 133, 191, 114, 47, 23, 175, 26, 90, 35, 195, 77, 106, 11, 107, 183, 117, 75, 47, 63, 130, 165, 157, 89, 80, 4, 12, 153, 128, 94, 1, 38, 88, 21, 119, 16, 56, 185, 160, 174, 17, 61, 72, 82, 60, 35, 113, 105, 109, 178, 50, 77, 171, 141, 81, 137, 27, 64, 14, 121, 184, 12, 7, 173, 106, 177, 149, 19, 110, 55, 23, 99, 129, 180, 159, 104, 128, 142, 76, 55, 193, 190, 66, 123, 170, 152, 46, 115, 44, 164, 101, 65, 54, 168, 115, 108, 96, 194, 73, 7, 93, 97, 118, 156, 175, 72, 90, 195, 137, 167, 136, 105, 68, 153, 130, 116, 3, 178, 131, 94, 56, 9, 36, 143, 32, 15, 88, 59, 170, 132, 60, 176, 6, 163, 179, 69, 93, 195, 55, 52, 108, 38, 37, 136, 4, 186, 174, 80, 10, 179, 138, 107, 26, 177, 33, 59, 169, 74, 57, 72, 44, 84, 76, 24, 27, 195, 36, 133, 35, 141, 20, 40, 89, 168, 7, 19, 87, 107, 12, 88, 142, 128, 81, 29, 108, 66, 3, 79, 70, 97, 191, 15, 53, 63, 182, 39, 138, 48, 156, 105, 115, 64, 45, 104, 149, 44, 163, 76, 100, 43, 116, 109, 124, 6, 77, 185, 51, 157, 92, 158, 95, 172, 110, 120, 56, 189, 183, 73, 174, 103, 79, 170, 147, 165, 168, 129, 9, 24, 109, 21, 12, 176, 188, 145, 142, 7, 61, 2, 49, 83, 53, 137, 117, 100, 144, 40, 98, 89, 39, 13, 35, 10, 134, 65, 181, 164, 155, 102, 87, 178, 124, 119, 107, 113, 46, 96, 115, 47, 147, 30, 125, 93, 18, 169, 41, 165, 66, 188, 143, 92, 175, 29, 1, 111, 13, 123, 156, 32, 124, 118, 67, 49, 94, 27, 183, 108, 38, 52, 53, 129, 190, 88, 34, 25, 125, 148, 185, 12, 40, 138, 43, 68, 50, 6, 101, 3, 78, 61, 139, 84, 153, 145, 98, 85, 192, 23, 126, 167, 95, 118, 91, 191, 164, 178, 189, 34, 27, 10, 39, 124, 183, 48, 105, 181, 84, 2, 89, 132, 58, 174, 150, 45, 92, 7, 38, 177, 159, 143, 20, 17, 13, 58, 50, 84, 144, 88, 162, 80, 141, 91, 53, 155, 142, 105, 54, 93, 67, 185, 139, 16, 90, 70, 29, 49, 59, 135, 138, 112, 43, 48, 179, 170, 165, 15, 188, 60, 161, 6, 67, 84, 34, 130, 157, 47, 156, 187, 94, 175, 38, 21, 7, 124, 27, 118, 134, 180, 19, 63, 104, 119, 18, 102, 113, 103, 41, 65, 99, 10, 13, 125, 186, 5, 177, 59, 29, 182, 46, 123, 126, 97, 40, 71, 161, 43, 178, 8, 63, 101, 57, 141, 104, 64, 133, 1, 90, 24, 137, 192, 27, 118, 89, 2, 61, 119, 32, 35, 157, 70, 91, 130, 71, 50, 176, 106, 185, 4, 77, 142, 66, 195, 183, 44, 37, 100
        };
        System.out.println(maxCoins(nums));
    }

    public static long maxCoins(int[] cuts) {
        int[] c = new int[cuts.length + 2];
        for (int i = 0; i < cuts.length; i++) {
            c[i + 1] = cuts[i];
        }
        c[c.length - 1] = 1;
        c[0] = 1;
//        Arrays.sort(c);
        long[][] dp = new long[c.length][c.length];
        for (long[] arr : dp) {
            Arrays.fill(arr, -1);
        }

        return solve(c, 1, cuts.length, dp);
    }

    private static long solve(int[] cuts, int left, int right, long[][] dp) {
        if (left > right)
            return 0;

        long cost = Integer.MIN_VALUE;

        if (dp[left][right] != -1)
            return dp[left][right];

        for (int i = left; i <= right; i++) {
            long left_cost = solve(cuts, left, i - 1, dp);
            long right_cost = solve(cuts, i + 1, right, dp);

            long curr_cost = ((long) cuts[right + 1] * cuts[i] * cuts[left - 1]) + left_cost + right_cost;

            cost = Math.max(curr_cost, cost);
        }

        return dp[left][right] = cost;
    }
}
